
trigger:
- master

pool:
  vmImage: ubuntu-latest

steps:

- task: AzureResourceManagerTemplateDeployment@3
  inputs:
    deploymentScope: 'Resource Group'
    azureResourceManagerConnection: 'Visual Studio Enterprise (2a22bfca-1d56-46ef-9b7a-0a93d5552606)'
    subscriptionId: '2a22bfca-1d56-46ef-9b7a-0a93d5552606'
    action: 'Create Or Update Resource Group'
    resourceGroupName: 'buildwithAKSadded'
    location: 'Central US'
    templateLocation: 'URL of the file'
    csmFileLink: 'https://raw.githubusercontent.com/moragheb/react-and-spring-data-rest/master/Environemnet%20ARM%20Template/template.json'
    deploymentMode: 'Incremental'


- task: Maven@3
  inputs:
    mavenPomFile: 'pom.xml'
    options: 'clean'
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    codeCoverageToolOption: 'Cobertura'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.8'
    mavenVersionOption: 'Default'
    mavenAuthenticateFeed: false
    effectivePomSkip: false
    sonarQubeRunAnalysis: false
    codeCoverageSourceDirectories: src/main    

- task: CopyFiles@2
  displayName: 'Copy Files to: $(build.artifactstagingdirectory)'
  inputs:
    SourceFolder: '$(system.defaultworkingdirectory)'
    Contents: '**/*.jar'
    TargetFolder: '$(build.artifactstagingdirectory)'
  condition: succeededOrFailed()
  

- task: CopyFiles@2
  inputs:
    Contents: 'deployment.azure.yaml'
    TargetFolder: '$(build.artifactstagingdirectory)'

  
  
    
- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: Package-build'
  inputs:
    PathtoPublish: '$(build.artifactstagingdirectory)'
    ArtifactName: 'Package-build'
  condition: succeededOrFailed()    


- task: Docker@1
  displayName: 'build an image'
  inputs:
    azureSubscriptionEndpoint: 'Visual Studio Enterprise (2a22bfca-1d56-46ef-9b7a-0a93d5552606)'
    azureContainerRegistry: ACRSpringbootimages.azurecr.io
    dockerFile: Dockerfile
    imageName: 'SpringAppImage'
    includeLatestTag: true
    useDefaultContext: false
    buildContext: .

- task: Docker@1
  displayName: 'Push Image'
  inputs:
    azureSubscriptionEndpoint: 'Visual Studio Enterprise (2a22bfca-1d56-46ef-9b7a-0a93d5552606)'
    azureContainerRegistry: acrspringbootimages.azurecr.io
    command: 'Push an image'
    imageName: 'SpringAppImage'

trigger:
- master
variables:
    -group : Pipeline_Variable_Group
    -name : VSTS_ARM_REST_IGNORE_SSL_ERRORS
    -value: true

stages:
- stage: Build
  displayName: 'build the IOC image registry and empty SQL'
  pool:
    vmImage: 'ubuntu-latest'
  jobs:
  - job: BuildIOC
    steps:
        - task: AzureResourceManagerTemplateDeployment@3
          inputs:
            deploymentScope: 'Resource Group'
            azureResourceManagerConnection: 'Arm-ServiceConnection'
            action: 'Create Or Update Resource Group'
            resourceGroupName: $(varResoursegroupname)
            location: 'Central US'
            templateLocation: 'URL of the file'
            csmFileLink: 'https://raw.githubusercontent.com/moragheb/react-and-spring-data-rest/master/Environemnet%20ARM%20Template/template.json'
            deploymentMode: 'Incremental'
- stage: Compile
  displayName: 'maven build the app and test the code base using jacoco'
  pool:
    vmImage: 'ubuntu-latest'
  jobs:
  - job: compile
    steps:
        - task: Maven@3
          inputs:
            mavenPomFile: 'pom.xml'
            options: 'clean'
            publishJUnitResults: true
            testResultsFiles: '**/surefire-reports/TEST-*.xml'
            codeCoverageToolOption: 'Cobertura'
            javaHomeOption: 'JDKVersion'
            jdkVersionOption: '1.8'
            mavenVersionOption: 'Default'
            mavenAuthenticateFeed: false
            effectivePomSkip: false
            sonarQubeRunAnalysis: false
            codeCoverageSourceDirectories: src/main    

        - task: CopyFiles@2
          displayName: 'Copy Files to: $(build.artifactstagingdirectory)'
          inputs:
            SourceFolder: '$(system.defaultworkingdirectory)'
            Contents: '**/*.jar'
            TargetFolder: '$(build.artifactstagingdirectory)'
          condition: succeededOrFailed()
              
        - task: PublishBuildArtifacts@1
          displayName: 'Publish Artifact: Package-build'
          inputs:
            PathtoPublish: '$(build.artifactstagingdirectory)'
            ArtifactName: 'Package-build'
          condition: succeededOrFailed()    
- stage: Dockerbuild
  displayName: 'build the docker image and push to  Azure Container registry'
  pool:
    vmImage: 'ubuntu-latest'
  jobs:
  - job: dockerpush
    steps:
        - task: Docker@1
          displayName: 'build an image'
          inputs:
            azureSubscriptionEndpoint: 'Arm-ServiceConnection'
            azureContainerRegistry: acr$(varResoursegroupname).azurecr.io
            dockerFile: Dockerfile
            imageName: 'SpringAppImage'
            includeLatestTag: true
            useDefaultContext: false
            buildContext: .

        - task: Docker@1
          displayName: 'Push Image'
          inputs:
            azureSubscriptionEndpoint: 'Arm-ServiceConnection'
            azureContainerRegistry: acr$(varResoursegroupname).azurecr.io
            command: 'Push an image'
            imageName: 'SpringAppImage'